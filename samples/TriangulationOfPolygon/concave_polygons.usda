#usda 1.0
(
    defaultPrim = "root"
    endTimeCode = 300
    framesPerSecond = 30
    startTimeCode = 0
)

def Xform "root"
{
    def Scope "Materials"
    {
        def Material "mat1"
        {
            token outputs:surface.connect = </root/Materials/mat1/PBRShader.outputs:surface>

            def Shader "PBRShader"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (0.6120656, 0.6120656, 0.6120656)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.1
                token outputs:surface
            }
        }
    }

    def Mesh "Quad"
    {
        int[] faceVertexCounts = [4]
        int[] faceVertexIndices = [0, 2, 3, 1]
        rel material:binding = </root/Materials/mat1>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1)]
        point3f[] points = [(-14, -2.5, 0), (-24, -2.5, 0), (-14, 7.5, 0), (-24, 7.5, 0)]
        texCoord2f[] primvars:st = [(1, 0), (1, 1), (0, 1), (0, 0)] (
            interpolation = "faceVarying"
        )
        int[] primvars:st:indices = [0, 1, 2, 3]
        uniform token subdivisionScheme = "none"
    }

    def Mesh "Hexagonal"
    {
        int[] faceVertexCounts = [6]
        int[] faceVertexIndices = [0, 1, 2, 3, 4, 5]
        rel material:binding = </root/Materials/mat1>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1)]
        point3f[] points = [(-4.037787, 6.7646804, 0), (-8.962216, 6.7646804, 0), (-11.42443, 2.4999998, 0), (-8.9622135, -1.7646809, 0), (-4.037787, -1.7646809, 0), (-1.5755707, 2.500001, 0)]
        texCoord2f[] primvars:st = [(0.75, 0.9330127), (0.24999997, 0.9330127), (0, 0.49999994), (0.25000006, 0.066987276), (0.74999994, 0.066987276), (1, 0.5000001)] (
            interpolation = "faceVarying"
        )
        texCoord2f[] primvars:st2 = [(0.75, 0.9330127), (0.24999997, 0.9330127), (0, 0.49999994), (0.25000006, 0.066987276), (0.74999994, 0.066987276), (1, 0.5000001)] (
            interpolation = "faceVarying"
        )
        int[] primvars:st2:indices = [0, 1, 2, 3, 4, 5]
        int[] primvars:st:indices = [0, 1, 2, 3, 4, 5]
        uniform token subdivisionScheme = "none"
    }

    def Mesh "Concave"
    {
        int[] faceVertexCounts = [6]
        int[] faceVertexIndices = [0, 2, 5, 4, 3, 1]
        rel material:binding = </root/Materials/mat1>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1)]
        point3f[] points = [(13.5, -2.5, 0), (3.5, -2.5, 0), (13.5, 7.5, 0), (3.5, 7.5, 0), (6.8201175, 4.5, 0), (10.867702, 4.5, 0)]
        texCoord2f[] primvars:st = [(1, 0), (1, 1), (0.7867701, 1), (0.3320117, 1), (0, 1), (0, 0)] (
            interpolation = "faceVarying"
        )
        int[] primvars:st:indices = [0, 1, 2, 3, 4, 5]
        uniform token subdivisionScheme = "none"
    }

    def Mesh "Concave2"
    {
        int[] faceVertexCounts = [4]
        int[] faceVertexIndices = [0, 2, 3, 1]
        rel material:binding = </root/Materials/mat1>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1)]
        point3f[] points = [(27, -2.5, 0), (17, -2.5, 0), (20, 0.5, 0), (17, 7.5, 0)]
        texCoord2f[] primvars:st = [(1, 0), (1, 1), (0, 1), (0, 0)] (
            interpolation = "faceVarying"
        )
        int[] primvars:st:indices = [0, 1, 2, 3]
        uniform token subdivisionScheme = "none"
    }
}

