#usda 1.0
(
    customLayerData = {
        dictionary audioSettings = {
            double dopplerLimit = 2
            double dopplerScale = 1
            token enableDistanceDelay = "off"
            token enableDoppler = "off"
            double nonSpatialTimeScale = 1
            double spatialTimeScale = 1
            double speedOfSound = 340
        }
        dictionary cameraSettings = {
            dictionary Front = {
                double radius = 500
                double3 target = (0, 0, 0)
            }
            dictionary Perspective = {
                double3 position = (95.32391062825803, 84.61041180857303, 75.43449524489368)
                double3 target = (0, 34.99999999999959, -8.668621376273222e-13)
            }
            dictionary Right = {
                double radius = 500
                double3 target = (0, 0, 0)
            }
            dictionary Top = {
                double radius = 500
                double3 target = (0, 0, 0)
            }
            string boundCamera = "/OmniverseKit_Persp"
        }
        dictionary omni_layer = {
            string authoring_layer = "K:/NVIDIA_omniverse/usda/boneTest_edit.usda"
        }
        dictionary renderSettings = {
            float "rtx:post:lensDistortion:cameraFocalLength" = 18.147562
        }
    }
    defaultPrim = "root"
    doc = "USD Exporter for Shade3D (0.1.1.1)"
    metersPerUnit = 0.009999999776482582
    timeCodesPerSecond = 24
    upAxis = "Y"
)

def Xform "root"
{
    def Scope "Materials"
    {
        def Material "mat1"
        {
            token outputs:mdl:surface.connect = </root/Materials/mat1/Shader.outputs:out>

            def Shader "Shader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:mdl:sourceAsset = @OmniPBR.mdl@
                uniform token info:mdl:sourceAsset:subIdentifier = "OmniPBR"
                color3f inputs:diffuse_color_constant = (1, 1, 1) (
                    customData = {
                        float3 default = (0.2, 0.2, 0.2)
                        dictionary range = {
                            float3 max = (100000, 100000, 100000)
                            float3 min = (0, 0, 0)
                        }
                    }
                    displayGroup = "Albedo"
                    displayName = "Base Color"
                )
                float inputs:metallic_constant = 0 (
                    customData = {
                        float default = 0
                        dictionary range = {
                            float max = 1
                            float min = 0
                        }
                    }
                    displayGroup = "Reflectivity"
                    displayName = "Metallic Amount"
                )
                float inputs:reflection_roughness_constant = 0 (
                    customData = {
                        float default = 0.5
                        dictionary range = {
                            float max = 1
                            float min = 0
                        }
                    }
                    displayGroup = "Reflectivity"
                    displayName = "Roughness Amount"
                )
                token outputs:out
            }
        }
    }

    def Scope "Skeletons"
    {
        def SkelRoot "boneA"
        {
            def Skeleton "Skel" (
                prepend apiSchemas = ["SkelBindingAPI"]
            )
            {
                uniform matrix4d[] bindTransforms = [( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) ), ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 35, 0, 1) ), ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 70, 0, 1) )]
                uniform token[] joints = ["boneA", "boneA/boneB", "boneA/boneB/boneC"]
                uniform matrix4d[] restTransforms = [( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) ), ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 35, 0, 1) ), ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 35, 0, 1) )]
                rel skel:animationSource = </root/Skeletons/boneA/Skel/previewSkelAnim>
                float3 xformOp:rotateXYZ = (0, 1.8474983, 0)
                float3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "boneA"
                {
                    double3 xformOp:translate = (0, 5, 0)
                }

                def SkelAnimation "previewSkelAnim"
                {
                    uniform token[] joints = ["boneA", "boneA/boneB", "boneA/boneB/boneC"]
                    quatf[] rotations = [(1, 0, 0, 0), (0.99195784, -0.12650299, 3.8254728e-19, -0.0040804944), (1, 0, 0, 0)]
                    half3[] scales = [(1, 1, 1), (1, 1, 1), (1, 1, 1)]
                    float3[] translations = [(0, 0, 0), (0, 35, 0), (0, 35, 0)]
                }
            }

            def Mesh "mesh" (
                prepend apiSchemas = ["SkelBindingAPI"]
            )
            {
                int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
                int[] faceVertexIndices = [0, 1, 2, 15, 15, 2, 3, 14, 14, 3, 4, 13, 13, 4, 5, 12, 12, 5, 6, 11, 11, 6, 7, 10, 10, 7, 8, 9, 143, 142, 141, 128, 128, 141, 140, 129, 129, 140, 139, 130, 130, 139, 138, 131, 131, 138, 137, 132, 132, 137, 136, 133, 133, 136, 135, 134, 17, 145, 144, 16, 18, 146, 145, 17, 19, 147, 146, 18, 20, 148, 147, 19, 21, 149, 148, 20, 22, 150, 149, 21, 23, 151, 150, 22, 24, 152, 151, 23, 25, 153, 152, 24, 26, 154, 153, 25, 27, 155, 154, 26, 28, 156, 155, 27, 29, 157, 156, 28, 30, 158, 157, 29, 31, 159, 158, 30, 16, 144, 159, 31, 33, 17, 16, 32, 34, 18, 17, 33, 35, 19, 18, 34, 36, 20, 19, 35, 37, 21, 20, 36, 38, 22, 21, 37, 39, 23, 22, 38, 40, 24, 23, 39, 41, 25, 24, 40, 42, 26, 25, 41, 43, 27, 26, 42, 44, 28, 27, 43, 45, 29, 28, 44, 46, 30, 29, 45, 47, 31, 30, 46, 32, 16, 31, 47, 49, 33, 32, 48, 50, 34, 33, 49, 51, 35, 34, 50, 52, 36, 35, 51, 53, 37, 36, 52, 54, 38, 37, 53, 55, 39, 38, 54, 56, 40, 39, 55, 57, 41, 40, 56, 58, 42, 41, 57, 59, 43, 42, 58, 60, 44, 43, 59, 61, 45, 44, 60, 62, 46, 45, 61, 63, 47, 46, 62, 48, 32, 47, 63, 65, 49, 48, 64, 66, 50, 49, 65, 67, 51, 50, 66, 68, 52, 51, 67, 69, 53, 52, 68, 70, 54, 53, 69, 71, 55, 54, 70, 72, 56, 55, 71, 73, 57, 56, 72, 74, 58, 57, 73, 75, 59, 58, 74, 76, 60, 59, 75, 77, 61, 60, 76, 78, 62, 61, 77, 79, 63, 62, 78, 64, 48, 63, 79, 81, 65, 64, 80, 82, 66, 65, 81, 83, 67, 66, 82, 84, 68, 67, 83, 85, 69, 68, 84, 86, 70, 69, 85, 87, 71, 70, 86, 88, 72, 71, 87, 89, 73, 72, 88, 90, 74, 73, 89, 91, 75, 74, 90, 92, 76, 75, 91, 93, 77, 76, 92, 94, 78, 77, 93, 95, 79, 78, 94, 80, 64, 79, 95, 97, 81, 80, 96, 98, 82, 81, 97, 99, 83, 82, 98, 100, 84, 83, 99, 101, 85, 84, 100, 102, 86, 85, 101, 103, 87, 86, 102, 104, 88, 87, 103, 105, 89, 88, 104, 106, 90, 89, 105, 107, 91, 90, 106, 108, 92, 91, 107, 109, 93, 92, 108, 110, 94, 93, 109, 111, 95, 94, 110, 96, 80, 95, 111, 113, 97, 96, 112, 114, 98, 97, 113, 115, 99, 98, 114, 116, 100, 99, 115, 117, 101, 100, 116, 118, 102, 101, 117, 119, 103, 102, 118, 120, 104, 103, 119, 121, 105, 104, 120, 122, 106, 105, 121, 123, 107, 106, 122, 124, 108, 107, 123, 125, 109, 108, 124, 126, 110, 109, 125, 127, 111, 110, 126, 112, 96, 111, 127, 161, 113, 112, 160, 162, 114, 113, 161, 163, 115, 114, 162, 164, 116, 115, 163, 165, 117, 116, 164, 166, 118, 117, 165, 167, 119, 118, 166, 168, 120, 119, 167, 169, 121, 120, 168, 170, 122, 121, 169, 171, 123, 122, 170, 172, 124, 123, 171, 173, 125, 124, 172, 174, 126, 125, 173, 175, 127, 126, 174, 160, 112, 127, 175]
                rel material:binding = </root/Materials/mat1>
                normal3f[] normals = [(0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (1, 0, 6.0772365e-8), (0.9238795, 0, 0.38268346), (0.70710677, 0, 0.70710677), (0.38268343, 0, 0.9238795), (0, 0, 1), (-0.3826835, 0, 0.9238795), (-0.7071069, 0, 0.7071067), (-0.92387956, 0, 0.38268337), (-1, 0, -9.87551e-8), (-0.9238795, 0, -0.38268355), (-0.7071067, 0, -0.7071069), (-0.38268334, 0, -0.92387956), (1.0635165e-7, 0, -1), (0.38268355, 0, -0.9238795), (0.7071068, 0, -0.7071067), (0.92387956, 0, -0.38268334), (1, 0, 6.0772365e-8), (0.9238795, 0, 0.38268343), (0.70710677, 0, 0.70710677), (0.38268343, 0, 0.9238795), (0, 0, 1), (-0.3826835, 0, 0.9238795), (-0.7071069, 0, 0.7071067), (-0.92387956, 0, 0.38268337), (-1, 0, -9.87551e-8), (-0.9238795, 0, -0.38268355), (-0.7071067, 0, -0.7071069), (-0.38268334, 0, -0.92387956), (1.0635165e-7, 0, -1), (0.38268355, 0, -0.9238795), (0.7071068, 0, -0.7071067), (0.92387956, 0, -0.38268334), (1, 0, 6.0772365e-8), (0.9238795, 0, 0.38268346), (0.70710677, 0, 0.70710677), (0.38268343, 0, 0.9238795), (0, 0, 1), (-0.3826835, 0, 0.9238795), (-0.7071069, 0, 0.7071067), (-0.92387956, 0, 0.38268337), (-1, 0, -9.87551e-8), (-0.9238795, 0, -0.38268355), (-0.7071067, 0, -0.7071069), (-0.38268334, 0, -0.92387956), (1.0635165e-7, 0, -1), (0.38268355, 0, -0.9238795), (0.7071068, 0, -0.7071067), (0.92387956, 0, -0.38268334), (1, 0, 6.0772365e-8), (0.9238795, 0, 0.38268346), (0.70710677, 0, 0.70710677), (0.38268343, 0, 0.9238795), (0, 0, 1), (-0.3826835, 0, 0.9238795), (-0.7071069, 0, 0.7071067), (-0.92387956, 0, 0.38268337), (-1, 0, -9.87551e-8), (-0.9238795, 0, -0.38268355), (-0.7071067, 0, -0.7071069), (-0.38268334, 0, -0.92387956), (1.0635165e-7, 0, -1), (0.38268355, 0, -0.9238795), (0.7071068, 0, -0.7071067), (0.92387956, 0, -0.38268334), (1, 0, 6.0772365e-8), (0.9238795, 0, 0.38268346), (0.70710677, 0, 0.70710677), (0.38268343, 0, 0.9238795), (0, 0, 1), (-0.3826835, 0, 0.9238795), (-0.7071069, 0, 0.7071067), (-0.92387956, 0, 0.38268337), (-1, 0, -9.87551e-8), (-0.9238795, 0, -0.38268355), (-0.7071067, 0, -0.7071069), (-0.38268334, 0, -0.92387956), (1.0635165e-7, 0, -1), (0.38268355, 0, -0.9238795), (0.7071068, 0, -0.7071067), (0.92387956, 0, -0.38268334), (1, 0, 6.0772365e-8), (0.9238795, 0, 0.38268346), (0.70710677, 0, 0.70710677), (0.38268343, 0, 0.9238795), (0, 0, 1), (-0.3826835, 0, 0.9238795), (-0.7071069, 0, 0.7071067), (-0.92387956, 0, 0.38268337), (-1, 0, -9.87551e-8), (-0.9238795, 0, -0.38268355), (-0.7071067, 0, -0.7071069), (-0.38268334, 0, -0.92387956), (1.0635165e-7, 0, -1), (0.38268355, 0, -0.9238795), (0.7071068, 0, -0.7071067), (0.92387956, 0, -0.38268334), (1, 0, 6.0772365e-8), (0.9238795, 0, 0.38268346), (0.70710677, 0, 0.70710677), (0.38268343, 0, 0.9238795), (0, 0, 1), (-0.3826835, 0, 0.9238795), (-0.7071069, 0, 0.7071067), (-0.92387956, 0, 0.38268337), (-1, 0, -9.87551e-8), (-0.9238795, 0, -0.38268355), (-0.7071067, 0, -0.7071069), (-0.38268334, 0, -0.92387956), (1.0635165e-7, 0, -1), (0.38268355, 0, -0.9238795), (0.7071068, 0, -0.7071067), (0.92387956, 0, -0.38268334), (0, 1, -2.376624e-16), (0, 1, -2.376624e-16), (0, 1, -2.376624e-16), (0, 1, -2.376624e-16), (0, 1, -2.376624e-16), (0, 1, -2.376624e-16), (0, 1, -2.376624e-16), (0, 1, -2.376624e-16), (0, 1, -2.376624e-16), (0, 1, -2.376624e-16), (0, 1, -2.376624e-16), (0, 1, -2.376624e-16), (0, 1, -2.376624e-16), (0, 1, -2.376624e-16), (0, 1, -2.376624e-16), (0, 1, -2.376624e-16), (1, 0, 6.0772365e-8), (0.9238795, 0, 0.38268346), (0.70710677, 0, 0.70710677), (0.38268343, 0, 0.9238795), (0, 0, 1), (-0.3826835, 0, 0.9238795), (-0.7071069, 0, 0.7071067), (-0.92387956, 0, 0.38268337), (-1, 0, -9.87551e-8), (-0.9238795, 0, -0.38268355), (-0.7071067, 0, -0.7071069), (-0.38268334, 0, -0.92387956), (1.0635165e-7, 0, -1), (0.38268355, 0, -0.9238795), (0.7071068, 0, -0.7071067), (0.92387956, 0, -0.38268334), (1, 0, 6.0772365e-8), (0.9238795, 0, 0.38268346), (0.70710677, 0, 0.70710677), (0.38268343, 0, 0.9238795), (0, 0, 1), (-0.3826835, 0, 0.9238795), (-0.7071069, 0, 0.7071067), (-0.92387956, 0, 0.38268337), (-1, 0, -9.87551e-8), (-0.9238795, 0, -0.38268355), (-0.7071067, 0, -0.7071069), (-0.38268334, 0, -0.92387956), (1.0635165e-7, 0, -1), (0.38268355, 0, -0.9238795), (0.7071068, 0, -0.7071067), (0.92387956, 0, -0.38268334)]
                point3f[] points = [(10, 0, 0), (9.238795, 0, 3.8268344), (7.071068, 0, 7.071068), (3.8268342, 0, 9.238795), (-4.371139e-7, 0, 10), (-3.826835, 0, 9.238795), (-7.071069, 0, 7.0710673), (-9.238795, 0, 3.8268337), (-10, 0, -8.742278e-7), (-9.238795, 0, -3.8268354), (-7.0710673, 0, -7.071069), (-3.8268335, 0, -9.238795), (0.0000013113416, 0, -10), (3.8268356, 0, -9.238795), (7.071069, 0, -7.0710673), (9.238796, 0, -3.826833), (10, 8.75, 0), (9.238795, 8.75, 3.8268344), (7.071068, 8.75, 7.071068), (3.8268342, 8.75, 9.238795), (-4.371139e-7, 8.75, 10), (-3.826835, 8.75, 9.238795), (-7.071069, 8.75, 7.0710673), (-9.238795, 8.75, 3.8268337), (-10, 8.75, -8.742278e-7), (-9.238795, 8.75, -3.8268354), (-7.0710673, 8.75, -7.071069), (-3.8268335, 8.75, -9.238795), (0.0000013113416, 8.75, -10), (3.8268356, 8.75, -9.238795), (7.071069, 8.75, -7.0710673), (9.238796, 8.75, -3.826833), (10, 17.5, 0), (9.238795, 17.5, 3.8268344), (7.071068, 17.5, 7.071068), (3.8268342, 17.5, 9.238795), (-4.371139e-7, 17.5, 10), (-3.826835, 17.5, 9.238795), (-7.071069, 17.5, 7.0710673), (-9.238795, 17.5, 3.8268337), (-10, 17.5, -8.742278e-7), (-9.238795, 17.5, -3.8268354), (-7.0710673, 17.5, -7.071069), (-3.8268335, 17.5, -9.238795), (0.0000013113416, 17.5, -10), (3.8268356, 17.5, -9.238795), (7.071069, 17.5, -7.0710673), (9.238796, 17.5, -3.826833), (10, 26.25, 0), (9.238795, 26.25, 3.8268344), (7.071068, 26.25, 7.071068), (3.8268342, 26.25, 9.238795), (-4.371139e-7, 26.25, 10), (-3.826835, 26.25, 9.238795), (-7.071069, 26.25, 7.0710673), (-9.238795, 26.25, 3.8268337), (-10, 26.25, -8.742278e-7), (-9.238795, 26.25, -3.8268354), (-7.0710673, 26.25, -7.071069), (-3.8268335, 26.25, -9.238795), (0.0000013113416, 26.25, -10), (3.8268356, 26.25, -9.238795), (7.071069, 26.25, -7.0710673), (9.238796, 26.25, -3.826833), (10, 35, 0), (9.238795, 35, 3.8268344), (7.071068, 35, 7.071068), (3.8268342, 35, 9.238795), (-4.371139e-7, 35, 10), (-3.826835, 35, 9.238795), (-7.071069, 35, 7.0710673), (-9.238795, 35, 3.8268337), (-10, 35, -8.742278e-7), (-9.238795, 35, -3.8268354), (-7.0710673, 35, -7.071069), (-3.8268335, 35, -9.238795), (0.0000013113416, 35, -10), (3.8268356, 35, -9.238795), (7.071069, 35, -7.0710673), (9.238796, 35, -3.826833), (10, 43.75, 0), (9.238795, 43.75, 3.8268344), (7.071068, 43.75, 7.071068), (3.8268342, 43.75, 9.238795), (-4.371139e-7, 43.75, 10), (-3.826835, 43.75, 9.238795), (-7.071069, 43.75, 7.0710673), (-9.238795, 43.75, 3.8268337), (-10, 43.75, -8.742278e-7), (-9.238795, 43.75, -3.8268354), (-7.0710673, 43.75, -7.071069), (-3.8268335, 43.75, -9.238795), (0.0000013113416, 43.75, -10), (3.8268356, 43.75, -9.238795), (7.071069, 43.75, -7.0710673), (9.238796, 43.75, -3.826833), (10, 52.5, 0), (9.238795, 52.5, 3.8268344), (7.071068, 52.5, 7.071068), (3.8268342, 52.5, 9.238795), (-4.371139e-7, 52.5, 10), (-3.826835, 52.5, 9.238795), (-7.071069, 52.5, 7.0710673), (-9.238795, 52.5, 3.8268337), (-10, 52.5, -8.742278e-7), (-9.238795, 52.5, -3.8268354), (-7.0710673, 52.5, -7.071069), (-3.8268335, 52.5, -9.238795), (0.0000013113416, 52.5, -10), (3.8268356, 52.5, -9.238795), (7.071069, 52.5, -7.0710673), (9.238796, 52.5, -3.826833), (10, 61.25, 0), (9.238795, 61.25, 3.8268344), (7.071068, 61.25, 7.071068), (3.8268342, 61.25, 9.238795), (-4.371139e-7, 61.25, 10), (-3.826835, 61.25, 9.238795), (-7.071069, 61.25, 7.0710673), (-9.238795, 61.25, 3.8268337), (-10, 61.25, -8.742278e-7), (-9.238795, 61.25, -3.8268354), (-7.0710673, 61.25, -7.071069), (-3.8268335, 61.25, -9.238795), (0.0000013113416, 61.25, -10), (3.8268356, 61.25, -9.238795), (7.071069, 61.25, -7.0710673), (9.238796, 61.25, -3.826833), (10, 70, 0), (9.238795, 70, 3.8268344), (7.071068, 70, 7.071068), (3.8268342, 70, 9.238795), (-4.371139e-7, 70, 10), (-3.826835, 70, 9.238795), (-7.071069, 70, 7.0710673), (-9.238795, 70, 3.8268337), (-10, 70, -8.742278e-7), (-9.238795, 70, -3.8268354), (-7.0710673, 70, -7.071069), (-3.8268335, 70, -9.238795), (0.0000013113416, 70, -10), (3.8268356, 70, -9.238795), (7.071069, 70, -7.0710673), (9.238796, 70, -3.826833), (10, 0, 0), (9.238795, 0, 3.8268344), (7.071068, 0, 7.071068), (3.8268342, 0, 9.238795), (-4.371139e-7, 0, 10), (-3.826835, 0, 9.238795), (-7.071069, 0, 7.0710673), (-9.238795, 0, 3.8268337), (-10, 0, -8.742278e-7), (-9.238795, 0, -3.8268354), (-7.0710673, 0, -7.071069), (-3.8268335, 0, -9.238795), (0.0000013113416, 0, -10), (3.8268356, 0, -9.238795), (7.071069, 0, -7.0710673), (9.238796, 0, -3.826833), (10, 70, 0), (9.238795, 70, 3.8268344), (7.071068, 70, 7.071068), (3.8268342, 70, 9.238795), (-4.371139e-7, 70, 10), (-3.826835, 70, 9.238795), (-7.071069, 70, 7.0710673), (-9.238795, 70, 3.8268337), (-10, 70, -8.742278e-7), (-9.238795, 70, -3.8268354), (-7.0710673, 70, -7.071069), (-3.8268335, 70, -9.238795), (0.0000013113416, 70, -10), (3.8268356, 70, -9.238795), (7.071069, 70, -7.0710673), (9.238796, 70, -3.826833)]
                int[] primvars:skel:jointIndices = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0] (
                    elementSize = 4
                    interpolation = "vertex"
                )
                float[] primvars:skel:jointWeights = [1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0.99, 0.01, 0, 0, 0.99, 0.01, 0, 0, 0.99, 0.01, 0, 0, 0.99, 0.01, 0, 0, 0.99, 0.01, 0, 0, 0.99, 0.01, 0, 0, 0.99, 0.01, 0, 0, 0.99, 0.01, 0, 0, 0.99, 0.01, 0, 0, 0.99, 0.01, 0, 0, 0.99, 0.01, 0, 0, 0.99, 0.01, 0, 0, 0.99, 0.01, 0, 0, 0.99, 0.01, 0, 0, 0.99, 0.01, 0, 0, 0.99, 0.01, 0, 0, 0.5, 0.5, 0, 0, 0.5, 0.5, 0, 0, 0.5, 0.5, 0, 0, 0.5, 0.5, 0, 0, 0.5, 0.5, 0, 0, 0.5, 0.5, 0, 0, 0.5, 0.5, 0, 0, 0.5, 0.5, 0, 0, 0.5, 0.5, 0, 0, 0.5, 0.5, 0, 0, 0.5, 0.5, 0, 0, 0.5, 0.5, 0, 0, 0.5, 0.5, 0, 0, 0.5, 0.5, 0, 0, 0.5, 0.5, 0, 0, 0.5, 0.5, 0, 0, 0.98999995, 0.01000005, 0, 0, 0.98999995, 0.01000005, 0, 0, 0.98999995, 0.01000005, 0, 0, 0.98999995, 0.01000005, 0, 0, 0.98999995, 0.01000005, 0, 0, 0.98999995, 0.01000005, 0, 0, 0.98999995, 0.01000005, 0, 0, 0.98999995, 0.01000005, 0, 0, 0.98999995, 0.01000005, 0, 0, 0.98999995, 0.01000005, 0, 0, 0.98999995, 0.01000005, 0, 0, 0.98999995, 0.01000005, 0, 0, 0.98999995, 0.01000005, 0, 0, 0.98999995, 0.01000005, 0, 0, 0.98999995, 0.01000005, 0, 0, 0.98999995, 0.01000005, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0] (
                    elementSize = 4
                    interpolation = "vertex"
                )
                texCoord2f[] primvars:st = [(0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0, 1), (0.9375, 0.125), (0.9375, 0), (1, 0), (1, 0.125), (0.875, 0.125), (0.875, 0), (0.9375, 0), (0.9375, 0.125), (0.8125, 0.125), (0.8125, 0), (0.875, 0), (0.875, 0.125), (0.75, 0.125), (0.75, 0), (0.8125, 0), (0.8125, 0.125), (0.6875, 0.125), (0.6875, 0), (0.75, 0), (0.75, 0.125), (0.625, 0.125), (0.625, 0), (0.6875, 0), (0.6875, 0.125), (0.5625, 0.125), (0.5625, 0), (0.625, 0), (0.625, 0.125), (0.5, 0.125), (0.5, 0), (0.5625, 0), (0.5625, 0.125), (0.4375, 0.125), (0.4375, 0), (0.5, 0), (0.5, 0.125), (0.375, 0.125), (0.375, 0), (0.4375, 0), (0.4375, 0.125), (0.3125, 0.125), (0.3125, 0), (0.375, 0), (0.375, 0.125), (0.25, 0.125), (0.25, 0), (0.3125, 0), (0.3125, 0.125), (0.1875, 0.125), (0.1875, 0), (0.25, 0), (0.25, 0.125), (0.125, 0.125), (0.125, 0), (0.1875, 0), (0.1875, 0.125), (0.0625, 0.125), (0.0625, 0), (0.125, 0), (0.125, 0.125), (0, 0.125), (0, 0), (0.0625, 0), (0.0625, 0.125), (0.9375, 0.25), (0.9375, 0.125), (1, 0.125), (1, 0.25), (0.875, 0.25), (0.875, 0.125), (0.9375, 0.125), (0.9375, 0.25), (0.8125, 0.25), (0.8125, 0.125), (0.875, 0.125), (0.875, 0.25), (0.75, 0.25), (0.75, 0.125), (0.8125, 0.125), (0.8125, 0.25), (0.6875, 0.25), (0.6875, 0.125), (0.75, 0.125), (0.75, 0.25), (0.625, 0.25), (0.625, 0.125), (0.6875, 0.125), (0.6875, 0.25), (0.5625, 0.25), (0.5625, 0.125), (0.625, 0.125), (0.625, 0.25), (0.5, 0.25), (0.5, 0.125), (0.5625, 0.125), (0.5625, 0.25), (0.4375, 0.25), (0.4375, 0.125), (0.5, 0.125), (0.5, 0.25), (0.375, 0.25), (0.375, 0.125), (0.4375, 0.125), (0.4375, 0.25), (0.3125, 0.25), (0.3125, 0.125), (0.375, 0.125), (0.375, 0.25), (0.25, 0.25), (0.25, 0.125), (0.3125, 0.125), (0.3125, 0.25), (0.1875, 0.25), (0.1875, 0.125), (0.25, 0.125), (0.25, 0.25), (0.125, 0.25), (0.125, 0.125), (0.1875, 0.125), (0.1875, 0.25), (0.0625, 0.25), (0.0625, 0.125), (0.125, 0.125), (0.125, 0.25), (0, 0.25), (0, 0.125), (0.0625, 0.125), (0.0625, 0.25), (0.9375, 0.375), (0.9375, 0.25), (1, 0.25), (1, 0.375), (0.875, 0.375), (0.875, 0.25), (0.9375, 0.25), (0.9375, 0.375), (0.8125, 0.375), (0.8125, 0.25), (0.875, 0.25), (0.875, 0.375), (0.75, 0.375), (0.75, 0.25), (0.8125, 0.25), (0.8125, 0.375), (0.6875, 0.375), (0.6875, 0.25), (0.75, 0.25), (0.75, 0.375), (0.625, 0.375), (0.625, 0.25), (0.6875, 0.25), (0.6875, 0.375), (0.5625, 0.375), (0.5625, 0.25), (0.625, 0.25), (0.625, 0.375), (0.5, 0.375), (0.5, 0.25), (0.5625, 0.25), (0.5625, 0.375), (0.4375, 0.375), (0.4375, 0.25), (0.5, 0.25), (0.5, 0.375), (0.375, 0.375), (0.375, 0.25), (0.4375, 0.25), (0.4375, 0.375), (0.3125, 0.375), (0.3125, 0.25), (0.375, 0.25), (0.375, 0.375), (0.25, 0.375), (0.25, 0.25), (0.3125, 0.25), (0.3125, 0.375), (0.1875, 0.375), (0.1875, 0.25), (0.25, 0.25), (0.25, 0.375), (0.125, 0.375), (0.125, 0.25), (0.1875, 0.25), (0.1875, 0.375), (0.0625, 0.375), (0.0625, 0.25), (0.125, 0.25), (0.125, 0.375), (0, 0.375), (0, 0.25), (0.0625, 0.25), (0.0625, 0.375), (0.9375, 0.5), (0.9375, 0.375), (1, 0.375), (1, 0.5), (0.875, 0.5), (0.875, 0.375), (0.9375, 0.375), (0.9375, 0.5), (0.8125, 0.5), (0.8125, 0.375), (0.875, 0.375), (0.875, 0.5), (0.75, 0.5), (0.75, 0.375), (0.8125, 0.375), (0.8125, 0.5), (0.6875, 0.5), (0.6875, 0.375), (0.75, 0.375), (0.75, 0.5), (0.625, 0.5), (0.625, 0.375), (0.6875, 0.375), (0.6875, 0.5), (0.5625, 0.5), (0.5625, 0.375), (0.625, 0.375), (0.625, 0.5), (0.5, 0.5), (0.5, 0.375), (0.5625, 0.375), (0.5625, 0.5), (0.4375, 0.5), (0.4375, 0.375), (0.5, 0.375), (0.5, 0.5), (0.375, 0.5), (0.375, 0.375), (0.4375, 0.375), (0.4375, 0.5), (0.3125, 0.5), (0.3125, 0.375), (0.375, 0.375), (0.375, 0.5), (0.25, 0.5), (0.25, 0.375), (0.3125, 0.375), (0.3125, 0.5), (0.1875, 0.5), (0.1875, 0.375), (0.25, 0.375), (0.25, 0.5), (0.125, 0.5), (0.125, 0.375), (0.1875, 0.375), (0.1875, 0.5), (0.0625, 0.5), (0.0625, 0.375), (0.125, 0.375), (0.125, 0.5), (0, 0.5), (0, 0.375), (0.0625, 0.375), (0.0625, 0.5), (0.9375, 0.625), (0.9375, 0.5), (1, 0.5), (1, 0.625), (0.875, 0.625), (0.875, 0.5), (0.9375, 0.5), (0.9375, 0.625), (0.8125, 0.625), (0.8125, 0.5), (0.875, 0.5), (0.875, 0.625), (0.75, 0.625), (0.75, 0.5), (0.8125, 0.5), (0.8125, 0.625), (0.6875, 0.625), (0.6875, 0.5), (0.75, 0.5), (0.75, 0.625), (0.625, 0.625), (0.625, 0.5), (0.6875, 0.5), (0.6875, 0.625), (0.5625, 0.625), (0.5625, 0.5), (0.625, 0.5), (0.625, 0.625), (0.5, 0.625), (0.5, 0.5), (0.5625, 0.5), (0.5625, 0.625), (0.4375, 0.625), (0.4375, 0.5), (0.5, 0.5), (0.5, 0.625), (0.375, 0.625), (0.375, 0.5), (0.4375, 0.5), (0.4375, 0.625), (0.3125, 0.625), (0.3125, 0.5), (0.375, 0.5), (0.375, 0.625), (0.25, 0.625), (0.25, 0.5), (0.3125, 0.5), (0.3125, 0.625), (0.1875, 0.625), (0.1875, 0.5), (0.25, 0.5), (0.25, 0.625), (0.125, 0.625), (0.125, 0.5), (0.1875, 0.5), (0.1875, 0.625), (0.0625, 0.625), (0.0625, 0.5), (0.125, 0.5), (0.125, 0.625), (0, 0.625), (0, 0.5), (0.0625, 0.5), (0.0625, 0.625), (0.9375, 0.75), (0.9375, 0.625), (1, 0.625), (1, 0.75), (0.875, 0.75), (0.875, 0.625), (0.9375, 0.625), (0.9375, 0.75), (0.8125, 0.75), (0.8125, 0.625), (0.875, 0.625), (0.875, 0.75), (0.75, 0.75), (0.75, 0.625), (0.8125, 0.625), (0.8125, 0.75), (0.6875, 0.75), (0.6875, 0.625), (0.75, 0.625), (0.75, 0.75), (0.625, 0.75), (0.625, 0.625), (0.6875, 0.625), (0.6875, 0.75), (0.5625, 0.75), (0.5625, 0.625), (0.625, 0.625), (0.625, 0.75), (0.5, 0.75), (0.5, 0.625), (0.5625, 0.625), (0.5625, 0.75), (0.4375, 0.75), (0.4375, 0.625), (0.5, 0.625), (0.5, 0.75), (0.375, 0.75), (0.375, 0.625), (0.4375, 0.625), (0.4375, 0.75), (0.3125, 0.75), (0.3125, 0.625), (0.375, 0.625), (0.375, 0.75), (0.25, 0.75), (0.25, 0.625), (0.3125, 0.625), (0.3125, 0.75), (0.1875, 0.75), (0.1875, 0.625), (0.25, 0.625), (0.25, 0.75), (0.125, 0.75), (0.125, 0.625), (0.1875, 0.625), (0.1875, 0.75), (0.0625, 0.75), (0.0625, 0.625), (0.125, 0.625), (0.125, 0.75), (0, 0.75), (0, 0.625), (0.0625, 0.625), (0.0625, 0.75), (0.9375, 0.875), (0.9375, 0.75), (1, 0.75), (1, 0.875), (0.875, 0.875), (0.875, 0.75), (0.9375, 0.75), (0.9375, 0.875), (0.8125, 0.875), (0.8125, 0.75), (0.875, 0.75), (0.875, 0.875), (0.75, 0.875), (0.75, 0.75), (0.8125, 0.75), (0.8125, 0.875), (0.6875, 0.875), (0.6875, 0.75), (0.75, 0.75), (0.75, 0.875), (0.625, 0.875), (0.625, 0.75), (0.6875, 0.75), (0.6875, 0.875), (0.5625, 0.875), (0.5625, 0.75), (0.625, 0.75), (0.625, 0.875), (0.5, 0.875), (0.5, 0.75), (0.5625, 0.75), (0.5625, 0.875), (0.4375, 0.875), (0.4375, 0.75), (0.5, 0.75), (0.5, 0.875), (0.375, 0.875), (0.375, 0.75), (0.4375, 0.75), (0.4375, 0.875), (0.3125, 0.875), (0.3125, 0.75), (0.375, 0.75), (0.375, 0.875), (0.25, 0.875), (0.25, 0.75), (0.3125, 0.75), (0.3125, 0.875), (0.1875, 0.875), (0.1875, 0.75), (0.25, 0.75), (0.25, 0.875), (0.125, 0.875), (0.125, 0.75), (0.1875, 0.75), (0.1875, 0.875), (0.0625, 0.875), (0.0625, 0.75), (0.125, 0.75), (0.125, 0.875), (0, 0.875), (0, 0.75), (0.0625, 0.75), (0.0625, 0.875), (0.9375, 1), (0.9375, 0.875), (1, 0.875), (1, 1), (0.875, 1), (0.875, 0.875), (0.9375, 0.875), (0.9375, 1), (0.8125, 1), (0.8125, 0.875), (0.875, 0.875), (0.875, 1), (0.75, 1), (0.75, 0.875), (0.8125, 0.875), (0.8125, 1), (0.6875, 1), (0.6875, 0.875), (0.75, 0.875), (0.75, 1), (0.625, 1), (0.625, 0.875), (0.6875, 0.875), (0.6875, 1), (0.5625, 1), (0.5625, 0.875), (0.625, 0.875), (0.625, 1), (0.5, 1), (0.5, 0.875), (0.5625, 0.875), (0.5625, 1), (0.4375, 1), (0.4375, 0.875), (0.5, 0.875), (0.5, 1), (0.375, 1), (0.375, 0.875), (0.4375, 0.875), (0.4375, 1), (0.3125, 1), (0.3125, 0.875), (0.375, 0.875), (0.375, 1), (0.25, 1), (0.25, 0.875), (0.3125, 0.875), (0.3125, 1), (0.1875, 1), (0.1875, 0.875), (0.25, 0.875), (0.25, 1), (0.125, 1), (0.125, 0.875), (0.1875, 0.875), (0.1875, 1), (0.0625, 1), (0.0625, 0.875), (0.125, 0.875), (0.125, 1), (0, 1), (0, 0.875), (0.0625, 0.875), (0.0625, 1)] (
                    interpolation = "faceVarying"
                )
                int[] primvars:st:indices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567]
                rel skel:animationSource = </root/Skeletons/boneA/Skel/Anim>
                rel skel:skeleton = </root/Skeletons/boneA/Skel>
                uniform token subdivisionScheme = "none"
            }
        }
    }

    def Xform "boneA"
    {
        def Xform "boneB"
        {
            float3 xformOp:translate = (0, 35, 0)
            uniform token[] xformOpOrder = ["xformOp:translate"]

            def Xform "boneC"
            {
                float3 xformOp:translate = (0, 35, 0)
                uniform token[] xformOpOrder = ["xformOp:translate"]
            }
        }
    }
}

